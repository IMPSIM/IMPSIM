#summary One-sentence summary of this page.

= Introduction =

IMP Expressions allow you to assign values to variables and to specify the values of joint positions as time goes on.  Expressions transform IMP from a modeling engine into a simulation engine.

= Expressions =

Expressions in IMP are familiar to expressions in math and other programming languages, with one exception.  In IMP, expressions are stored into variables, rather than the expressions value.  For instance, in most programming languages:
{{{
X = Y + 3
}}}

Would take the value of Y, add 3, and assign the result to X.  In IMP, when the above command is executed, the expression "Y + 3" is stored into X, meaning that whenever the value of X is requested, the expression "Y + 3" is reevaluated.  

== Operators ==
IMP supports several operators, most of which are math based.  The operators supported, with their precedence, are as follows:

|| *Precedence* ||  *Symbol* ||  *Name* ||  *Description* || 
|| 1 ||  () ||  Parenthesis ||  Used for grouping || 
|| 1 ||  {} ||  Curly Brackets ||  Used for specifying lists || 
|| 2 ||  - ||  Negation ||  Used to negate a number/point || 
|| 3 ||  ^ ||  Exponent ||  Raise one number to another || 
|| 4 ||  * ||  Multiplication ||  Multiply two numbers together || 
|| 4 ||  / ||  Forward Slash ||  Divide two numbers together || 
|| 5 ||  + ||  Plus ||  Add two numbers together || 
|| 5 ||  - ||  Minus ||  Subtract two numbers || 
|| 6 ||  & ||  Concatenation ||  Concatenate two values to a string || 
|| 7 ||  , ||  Comma ||  Parameter Separation || 
|| 8 ||  ; ||  Semicolon ||  Point separation.  Syntactical sugar || 
|| 10 ||  = ||  Equals ||  Assign a value to a variable || 
|| 10 ||  := ||  Assign To ||  Assign an expression to a variable || 

