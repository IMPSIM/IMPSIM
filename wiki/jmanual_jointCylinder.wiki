#summary Cylinder joints and their statements.

= Introduction =

Cylinder joints are combinations of Revolute joints and Prism joints.  That means that they can spin around an axis and slide up and down that axis.


==The <tt>CYLINDER</tt> Statement==
<img src="http://impsim.googlecode.com/svn/wiki/images/Manual_figure_ch3_16.png" height="400px" />
_Figure 3-16:_ Example of a cylindric joint connecting two links.
The <tt>CYLINDER</tt> statement defines a cylindric joint (allowing turning and sliding motions about and along a common axis) connecting two links of the system (see figure 3-16).

===Format===
 <tt>CYLINDER</tt> (link name, link name) = joint name
where each _link name_ refers to the alphanumeric name given to one of the two connected links and _joint name_ is an arbitrarily chosen alphanumeric name assigned to the joint.

===Example===
 <tt>CYLINDER</tt> (LK1, LK2) = CYL
defines a cylindric joint named _CYL_ connecting two links named _LK1_ and _LK2_.

===Notes===
 # Each cylindric joint in the system must be defined by a separate <tt>CYLINDER</tt> statement.
 # No other joint of any type may be defined having the same _joint name_. An attempt to do so results in the deletion of the previously defined joint of the same _joint name_ (and all information dependent on it) a message is printed.
 # The same _link name_ may appear in more than one statement defining a joint.
 # Each statement defining a joint must refer to two distinct _link names_. An attempt to join a link to itself causes the statement to be ignored and a message to be printed.
 # Two local coordinate systems must be chosen for each <tt>CYLINDER</tt> _joint name_ (see figure) and defined by a subsequent <tt>DATA::CYLINDER</tt> statement or by two subsequent <tt>DATA::LINK</tt> statements. One local coordinate system (u,v,w) is rigidly attached to the first _link name_, while the other (u',v',w') is rigidly attached to the second _link name_. The local w and w' axes must be collinear and must be directed along the axis of relative motion of the joint. Both local w axes must have the same positive sense (see figure).
 # If an appropriate <tt>DATA::CYLINDER</tt> statement or <tt>DATA::LINK</tt> statement is not defined before an <tt>EXECUTE</tt> or <tt>EXECUTE HOLD</tt> statement is encountered, it is assumed that the corresponding local coordinate system(s) is (are) coincident with the link coordinate system; no message is printed.
 # Each <tt>CYLINDER</tt> joint has two internal degrees of freedom. The first joint variable is the angle from the positive local u axis to the positive local u' axis. It has units of degrees and is considered positive when counterclockwise as seen from the positive local w,w' axes. The second joint variable is the distance from the local u axis to the local u' axis measured along the common local w,w' axes it has units of length and is considered positive when the relative displacement is in the same sense as the positive local w,w' axes.
 # The order in which the two _link names_ appear is arbitrary. This choice, however, does affect the designation of the joint variables (see Note 7 above) and also the signs of the constraint force and torque components within the joint (see the <tt>PRINT FORCE</tt> statement).
 # It is assumed that there is no limit on the travel of either joint variable.




==The <tt>DATA::CYLINDER</tt> Statement==
<img src="http://impsim.googlecode.com/svn/wiki/images/Manual_figure_ch4_11.png" height="400px" />
_Figure 4-11:_
The <tt>DATA::CYLINDER</tt> statement specifies the numeric data which simultaneously locates the two local coordinate systems attachedto the two links on either side of a <tt>CYLINDER</tt> joint relative tothe absolute (global) frame of reference for the system.

The <tt>DATA::CYLINDER</tt> statements, taken together with the <tt>DATA</tt> statements for other types of joints and the <tt>DATA::LINK</tt> statements,describe the relative locations of the various links of the systemat the initial (design) position.

The initial locations of the two local coordinate systems attached to the two links joined by a <tt>CYLINDER</tt> statement are coincident and are both defined by a single <tt>DATA::CYLINDER</tt> statement by specifying the global coordinates of three points (see figure). The first point must lie at the common origin of the two localcoordinate systems. The second point must be located on the common local positive _w_,<i>w</i> axes. The third point must lie in the half-plane defined by the common local _w_,<i>w</i> axes and the common local positive _u_,<i>u</i> axes.

===Format===
 DATA::CYLINDER (joint name) = x<sub>1</sub>,y<sub>1</sub>,z<sub>1</sub>; x<sub>2</sub>,y<sub>2</sub>,z<sub>2</sub>; x<sub>3</sub>,y<sub>3</sub>,z<sub>3</sub>

where _joint name_ is the alphanumeric name of the <tt>CYLINDER</tt> joint connecting the two links to
which the local coordinate systems are attached. The _x<sub>i</sub>_,_y<sub>i</sub>_,_z<sub>i</sub>_ groups are
numeric values for the global coordinates of the three points defining the initial locations of
the two local _u_,_v_,_w_ and <i>u</i>,<i>v</i>,<i>w</i> coordinate systems.

===Examples===
 DATA::CYLINDER(CYL)=-1.0,1.0,0.0;-1.0,4.0,0.0;0.0,1.0,-0.5

specifies the initial locations of the two coincident _u_,_v_,_w_ and <i>u</i>,<i>v</i>,<i>w</i>
coordinate systems attached to the two links on either side of a <tt>CYLINDER</tt> joint named CYL. The
numeric data corresponds approximately to the figure.

===Notes===
 # The _joint name_ specified must have been defined by a previous <tt>CYLINDER</tt> statement. If not, the <tt>DATA::CYLINDER</tt> statement is ignored and a message is printed.
 # If a <tt>DATA::CYLINDER</tt> statement or the two equivalent <tt>DATA::LINK</tt> statements are not specified for each _joint name_ defined by a <tt>CYLINDER</tt> statement before an <tt>EXECUTE</tt> or <tt>EXECUTE HOLD</tt> statement is given, the local coordinate system(s) with missing data is (are) initially placed coincident with the link frame of reference.
 # If more than one <tt>DATA::CYLINDER</tt> statement is given for the same _joint name_, the later statement takes precedence and earlier data are replaced.
 # The dimensions for all _x<sub>i</sub>_,_y<sub>i</sub>_,_z<sub>i</sub>_ numeric data in a <tt>DATA::CYLINDER</tt> statement are length units.
 # Care should be taken in supplying accurate dimensional data since any errors result in improper shapes for the links and remain throughout the simulation. Slight errors cause inaccurate answers, while gross errors may cause completely unpredictable results.
 # The _x<sub>i</sub>_,_y<sub>i</sub>_,_z<sub>i</sub>_ numeric data must conform to the rules for the placement of the local coordinate systems for a <tt>CYLINDER</tt> joint (see <tt>CYLINDER</tt> statement). If errors are detected, the <tt>DATA::CYLINDER</tt> statement is ignored and a message is printed. Certain types of errors may not be detected until an <tt>EXECUTE</tt> or <tt>EXECUTE HOLD</tt> statement is given; these cause the simulation to be halted and a message to be printed at that time.
 # The three points for which _x<sub>i</sub>_,_y<sub>i</sub>_,_z<sub>i</sub>_ numeric data are given need not be unit distances apart; the local _u_,_v_,_w_ and <i>u</i>,<i>v</i>,<i>w</i> axes are normalized by IMP to form unit vectors. The points should not be chosen coincident or too close together, however; larger distances achieve more accurate placement of axes.
 # The angle formed by points _2_,_1_,_3_ need not be a right angle. IMP uses the first point to locate the two coincident local origins; extending a vector toward the second point, it then forms the common local _w_ and <i>w</i> axes. The common local positive _u_ and <i>u</i> axes are then taken in the half-plane defined by the common local _w_ and <i>w</i> axes and the third point; a right angle is formed for the common local _u_ and <i>u</i> axes in this half-plane even though they may not exactly pass through the third point.